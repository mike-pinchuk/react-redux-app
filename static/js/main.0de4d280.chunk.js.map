{"version":3,"sources":["store/reducer/reducer_counter.js","store/types.js","store/reducer/reducer_loader.js","store/reducer/rootReducer.js","store/store.js","WithoutReduxPage.jsx","WithReduxPage.jsx","store/actions.js","Counter.jsx","store/mapStateToProps.js","store/mapDispatchToProps.js","store/wrappedWithReduxPage.js","store/wrappedCounter.js","App.jsx","index.js"],"names":["countReducer","state","action","type","initialState","value","disabled","loadReducer","payload","rootReducer","combineReducers","counter","loading","store","createStore","WithoutReduxPage","useState","name","setNames","className","onClick","fetch","then","response","json","data","push","map","e","elem","id","key","src","alt","login","href","html_url","WithReduxPage","names","dispatch","item","getState","increment","decrement","newLoad","Counter","mapStateToProps","component","COMPONENT","COMPONENT1","state1","mapDispatchToProps","bindActionCreators","change_plus","change_minus","WithREduxPage1","connect","App","to","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0de4d280.chunk.js","sourcesContent":["import { INCREMENT, DECREMENT } from \"../types\";\n\nfunction countReducer(state = 0, action) {\n  if (action.type === INCREMENT) {\n    return state + 1;\n  } else if (action.type === DECREMENT) {\n    return state - 1;\n  }\n\n  return state;\n}\n\nexport default countReducer;\n","export const INCREMENT = 'INCREMENT'\nexport const DECREMENT = 'DECREMENT'\nexport const LOADING = 'LOADING'","import { LOADING } from \"../types\";\n\nconst initialState = {\n  value: null,\n  disabled: false,\n};\n\nfunction loadReducer(state = initialState, action) {\n  switch (action.type) {\n    case LOADING:\n      return { ...state, value: action.payload };\n    default:\n      return state;\n  }\n}\n\nexport default loadReducer\n","import { combineReducers } from \"redux\";\nimport countReducer from './reducer_counter'\nimport loadReducer from './reducer_loader'\n\nconst rootReducer = combineReducers({\n  counter: countReducer,\n  loading: loadReducer,\n});\n\nexport default rootReducer;\n","import { createStore } from \"redux\";\nimport rootReducer from './reducer/rootReducer'\n\nconst store = createStore(rootReducer)\n\nexport default store","import React, { useState } from \"react\";\n\nfunction WithoutReduxPage() {\n  const [name, setNames] = useState([]);\n\n  const getResult = () => {\n    return fetch(\"https://api.github.com/users\")\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        name.push(data);\n        setNames(\n          name.map((e) => {\n            return e.map((elem, id) => {\n              return (\n                <div key={id} className=\"card\">\n                  <h3>\n                    Number of card <span>{elem.id}</span>\n                  </h3>\n                  <img\n                    src={`https://avatars0.githubusercontent.com/u/${elem.id}?v=4`}\n                    alt=\"avatar\"\n                  />\n                  <p>Login: {elem.login}</p>\n                  <p>\n                    <a href={elem.html_url}>Personal GitHub page</a>\n                  </p>\n                </div>\n              );\n            });\n          })\n        );\n\n        return name;\n      });\n  };\n\n  return (\n    <div className=\"main\">\n      <h1>GitHub users (Without Redux)</h1>\n      <button onClick={getResult} type=\"button\">Click on me!</button>\n      <div className=\"result\">{name}</div>\n    </div>\n  );\n}\n\nexport default WithoutReduxPage;\n","import React from \"react\";\nimport store from \"./store/store\";\nimport { LOADING } from \"./store/types\";\n\nfunction WithReduxPage() {\n  function newLoad() {\n    let names = [];\n    return fetch(\"https://api.github.com/users\")\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        names.push(data);\n        store.dispatch({\n          type: LOADING,\n          payload: names.map((e) => {\n            return e.map((item, id) => {\n              return (\n                <div key={id} className=\"card\">\n                  <h3>\n                    Number of card <span>{item.id}</span>\n                  </h3>\n                  <img\n                    src={`https://avatars0.githubusercontent.com/u/${item.id}?v=4`}\n                    alt=\"avatar\"\n                  />\n                  <p>Login: {item.login}</p>\n                  <p>\n                    <a href={item.html_url}>Personal GitHub page</a>\n                  </p>\n                </div>\n              );\n            });\n          }),\n        });\n      });\n  }\n\n  return (\n    <div className=\"main\">\n       <h1>GitHub users (With Redux)</h1>\n      <button type=\"button\" onClick={newLoad}>\n        Click again!\n      </button>\n      <div className=\"result\">{store.getState().loading.value}</div>\n    </div>\n  );\n}\n\nexport default WithReduxPage;\n","import { INCREMENT, DECREMENT, LOADING } from \"./types\";\n\nexport function increment() {\n  return {\n    type: INCREMENT,\n  };\n}\n\nexport function decrement() {\n  return {\n    type: DECREMENT,\n  };\n}          \n\nexport function loading(newLoad) {\n  return {\n    type: LOADING,\n    payload: newLoad\n  }\n}\n","import React from \"react\";\nimport store from \"./store/store\";\nimport { increment, decrement } from \"./store/actions\";\nimport './Counter.css'\n\nfunction Counter() {\n  return (\n    <div className=\"counter\">\n      <h1>Counter (Using Redux)</h1>\n      <div className=\"buttons\"> \n        <button type=\"button\" onClick={() => store.dispatch(increment())}>\n          Plus\n        </button>\n        <button type=\"button\" onClick={() => store.dispatch(decrement())}>\n          Minus\n        </button>\n      </div>\n      <p className=\"result__counter\">\n      Result: <span>{store.getState().counter}</span>  \n      </p>\n    </div>\n  );\n}\n\nexport default Counter;\n","import COMPONENT from \"../WithReduxPage\";\nimport COMPONENT1 from \"../Counter\";\n\nfunction mapStateToProps(component) {\n  if (COMPONENT) {\n    return function (state) {\n      return {\n        value: state,\n      };\n    };\n  } else if (COMPONENT1) {\n    return function (state1) {\n      return {\n        value: state1,\n      };\n    };\n  } else {\n    return undefined;\n  }\n}\n\nexport default mapStateToProps;\n","import { bindActionCreators } from \"redux\";\nimport { increment, decrement, loading } from \"./actions\";\nimport COMPONENT from \"../WithReduxPage\";\nimport COMPONENT1 from \"../Counter\";\n\nfunction mapDispatchToProps(component) {\n  switch (component) {\n    case COMPONENT:\n      return function (dispatch) {\n        return {\n          loading: bindActionCreators(loading, dispatch),\n        };\n      };\n    case COMPONENT1:\n      return function (dispatch) {\n        return {\n          change_plus: bindActionCreators(increment, dispatch),\n          change_minus: bindActionCreators(decrement, dispatch),\n        };\n      };\n    default:\n      return undefined;\n  }\n}\n\nexport default mapDispatchToProps;\n","import {connect} from 'react-redux'\nimport COMPONENT from '../WithReduxPage'\nimport mapStateToProps from './mapStateToProps'\nimport mapDispatchToProps from './mapDispatchToProps'\n\nconst WithREduxPage1 = connect(mapStateToProps(COMPONENT), mapDispatchToProps(COMPONENT))(COMPONENT)\n\nexport default WithREduxPage1","import { connect } from \"react-redux\";\nimport COMPONENT1 from \"../Counter\";\nimport mapDispatchToProps from \"./mapDispatchToProps\";\nimport mapStateToProps from \"./mapStateToProps\";\n\nconst Counter = connect(\n  mapStateToProps(COMPONENT1),\n  mapDispatchToProps(COMPONENT1)\n)(COMPONENT1);\n\nexport default Counter;\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport \"./App.css\";\nimport store from \"./store/store\";\nimport WithoutReduxPage from \"./WithoutReduxPage\";\n// import WithReduxPage from \"./WithReduxPage\";\nimport WithReduxPage from \"./store/wrappedWithReduxPage\";\nimport Counter from './store/wrappedCounter'\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/\">Loading via Local State</Link>\n            </li>\n            <li>\n              <Link to=\"/loading_redux\">Loading via Redux</Link>\n            </li>\n            <li>\n              <Link to=\"/counter_redux\">Counter with Redux</Link>\n            </li>\n          </ul>\n        </nav>\n        <Switch>\n          <Route path=\"/counter_redux\">\n            <Provider store={store}>\n              <Counter />\n            </Provider>\n          </Route>\n          <Route path=\"/loading_redux\">\n            <Provider store={store}>\n              <WithReduxPage />\n            </Provider>\n          </Route>\n          <Route path=\"/\">\n            <WithoutReduxPage />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\n\nimport App from './App.jsx';\n// import * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}